[{"C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\index.js":"1","C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\App.js":"2","C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\reportWebVitals.js":"3","C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\components\\Match.js":"4","C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\components\\Join.js":"5","C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\components\\MatchGenres.js":"6","C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\components\\MatchMovies.js":"7","C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\components\\Result.js":"8"},{"size":589,"mtime":1614964826466,"results":"9","hashOfConfig":"10"},{"size":1382,"mtime":1617894415319,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":4357,"mtime":1617725111794,"results":"13","hashOfConfig":"10"},{"size":1363,"mtime":1614968339256,"results":"14","hashOfConfig":"10"},{"size":1216,"mtime":1615569897751,"results":"15","hashOfConfig":"10"},{"size":1925,"mtime":1616773611774,"results":"16","hashOfConfig":"10"},{"size":1150,"mtime":1617903216055,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1jl6uht",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\index.js",[],["36","37"],"C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\App.js",[],"C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\reportWebVitals.js",[],"C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\components\\Match.js",["38","39"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useHistory,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport io from \"socket.io-client\";\r\n// components\r\nimport MatchGenres from \"./MatchGenres\";\r\nimport MatchMovies from \"./MatchMovies\";\r\nimport Result from \"./Result\";\r\n\r\nlet socket;\r\n\r\nconst Match = () => {\r\n  const slug = useParams();\r\n  const match = useRouteMatch();\r\n  const rapidApiKey = process.env.REACT_APP_API_KEY;\r\n  const socketEndPoint = \"localhost:5000\";\r\n  let history = useHistory();\r\n\r\n  // STATE\r\n  const [genres, setGenres] = useState([]);\r\n  const [userGenres, setUserGenres] = useState([]);\r\n  const [movies, setMovies] = useState([]);\r\n  const [userMovies, setUserMovies] = useState([]);\r\n  const [name, setName] = useState(slug.name);\r\n  const [room, setroom] = useState(slug.room);\r\n\r\n  //                           //\r\n  //       SOCKET GENERAL      //\r\n  //                           //\r\n  // Join/Leave Room\r\n  useEffect(() => {\r\n    socket = io(socketEndPoint);\r\n\r\n    socket.emit(\"join\", { name, room }, () => {});\r\n\r\n    return () => {\r\n      socket.emit(\"endConnection\", room);\r\n\r\n      socket.close();\r\n    };\r\n  }, [socketEndPoint, name, room]);\r\n\r\n  // Other Users Joining Room\r\n  useEffect(() => {\r\n    socket.on(\"message\", (message) => {\r\n      alert(message.text);\r\n    });\r\n  }, []);\r\n\r\n  //                           //\r\n  // GENRE FUNCTIONS & SOCKETS //\r\n  //                           //\r\n  // Toggle Genres\r\n  const toggleGenre = (e, id) => {\r\n    if (e.target.style.backgroundColor === \"white\") {\r\n      e.target.style.backgroundColor = \"black\";\r\n    } else {\r\n      e.target.style.backgroundColor = \"white\";\r\n    }\r\n    if (e.target.style.color === \"black\") {\r\n      e.target.style.color = \"white\";\r\n    } else {\r\n      e.target.style.color = \"black\";\r\n    }\r\n\r\n    const genreIndex = userGenres.indexOf(id);\r\n    if (genreIndex === -1) {\r\n      setUserGenres((prevState) => [...prevState, id]);\r\n    } else {\r\n      setUserGenres((prevState) =>\r\n        prevState.filter((prev_id) => id !== prev_id)\r\n      );\r\n    }\r\n    socket.emit(\"updateGenres\", id);\r\n  };\r\n  // Submit Genres\r\n  const submitGenres = (e) => {\r\n    e.preventDefault();\r\n    socket.emit(\"getGenres\");\r\n  };\r\n  // Receive Genres After Submission\r\n  useEffect(() => {\r\n    socket.on(\"receiveGenres\", (receivedGenres) => {\r\n      setUserGenres(receivedGenres);\r\n      history.push(`${match.path}/movies`);\r\n    });\r\n  }, [history, match.path]);\r\n\r\n  //                           //\r\n  // MOVIE FUNCTIONS & SOCKETS //\r\n  //                           //\r\n  // Toggle Movies\r\n  const toggleMovies = (e, id) => {\r\n    if (e.target.style.border === \"2px solid black\") {\r\n      e.target.style.border = \"2px solid green\";\r\n    } else {\r\n      e.target.style.border = \"2px solid black\";\r\n    }\r\n\r\n    const movieIndex = userMovies.indexOf(id);\r\n    if (movieIndex === -1) {\r\n      setUserMovies((prevState) => [...prevState, id]);\r\n      socket.emit(\"addMovies\", id);\r\n    } else {\r\n      setUserMovies((prevState) =>\r\n        prevState.filter((prev_id) => id !== prev_id)\r\n      );\r\n      socket.emit(\"removeMovies\", id);\r\n    }\r\n  };\r\n  // Submit Movies\r\n  const submitMovies = (e) => {\r\n    e.preventDefault();\r\n    socket.emit(\"getMovies\");\r\n  };\r\n  // Receive Movies After Submission\r\n  useEffect(() => {\r\n    socket.on(\"receiveMovies\", (receivedMovies) => {\r\n      console.log(\"received movies:\", receivedMovies);\r\n      setUserMovies(receivedMovies);\r\n      history.push(`${match.path}/result`);\r\n    });\r\n  }, [history, match.path]);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.path}/movies`}>\r\n        <MatchMovies\r\n          movies={movies}\r\n          setMovies={setMovies}\r\n          toggleMovies={toggleMovies}\r\n          submitMovies={submitMovies}\r\n          userGenres={userGenres}\r\n          rapidApiKey={rapidApiKey}\r\n        />\r\n      </Route>\r\n      <Route path={`${match.path}/genres`}>\r\n        <MatchGenres\r\n          genres={genres}\r\n          setGenres={setGenres}\r\n          toggleGenre={toggleGenre}\r\n          submitGenres={submitGenres}\r\n          rapidApiKey={rapidApiKey}\r\n        />\r\n      </Route>\r\n      <Route path={`${match.path}/result`}>\r\n        <Result userMovies={userMovies} />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\nexport default Match;\r\n","C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\components\\Join.js",[],"C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\components\\MatchGenres.js",[],"C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\components\\MatchMovies.js",[],"C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\components\\Result.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":29,"column":16,"nodeType":"46","messageId":"47","endLine":29,"endColumn":23},{"ruleId":"44","severity":1,"message":"48","line":30,"column":16,"nodeType":"46","messageId":"47","endLine":30,"endColumn":23},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'setName' is assigned a value but never used.","Identifier","unusedVar","'setroom' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]