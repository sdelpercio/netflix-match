[{"C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\index.js":"1","C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\App.js":"2","C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\reportWebVitals.js":"3","C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\components\\Match.js":"4","C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\components\\Join.js":"5","C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\components\\MatchGenres.js":"6","C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\components\\MatchMovies.js":"7"},{"size":589,"mtime":1614964826466,"results":"8","hashOfConfig":"9"},{"size":1201,"mtime":1615566923938,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":3357,"mtime":1615565867053,"results":"12","hashOfConfig":"9"},{"size":1363,"mtime":1614968339256,"results":"13","hashOfConfig":"9"},{"size":1303,"mtime":1615567439466,"results":"14","hashOfConfig":"9"},{"size":2216,"mtime":1614630816006,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1jl6uht",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},"C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\index.js",[],["35","36"],"C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\App.js",[],"C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\reportWebVitals.js",[],"C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\components\\Match.js",["37","38","39"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useHistory,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport io from \"socket.io-client\";\r\n// components\r\nimport MatchGenres from \"./MatchGenres\";\r\nimport MatchMovies from \"./MatchMovies\";\r\n\r\nlet socket;\r\n\r\nconst Match = () => {\r\n  const slug = useParams();\r\n  const match = useRouteMatch();\r\n  const rapidApiKey = process.env.REACT_APP_API_KEY;\r\n  const socketEndPoint = \"localhost:5000\";\r\n  let history = useHistory();\r\n\r\n  // STATE\r\n  const [genres, setGenres] = useState([]);\r\n  const [userGenres, setUserGenres] = useState([]);\r\n  const [movies, setMovies] = useState([]);\r\n  const [userMovies, setUserMovies] = useState([]);\r\n  const [name, setName] = useState(slug.name);\r\n  const [room, setroom] = useState(slug.room);\r\n\r\n  //                           //\r\n  //       SOCKET GENERAL      //\r\n  //                           //\r\n  // Join/Leave Room\r\n  useEffect(() => {\r\n    socket = io(socketEndPoint);\r\n\r\n    socket.emit(\"join\", { name, room }, () => {});\r\n\r\n    return () => {\r\n      socket.emit(\"endConnection\", room);\r\n\r\n      socket.off();\r\n    };\r\n  }, [socketEndPoint, name, room]);\r\n\r\n  // Other Users Joining Room\r\n  useEffect(() => {\r\n    socket.on(\"message\", (message) => {\r\n      alert(message.text);\r\n    });\r\n  }, []);\r\n\r\n  //                           //\r\n  // GENRE FUNCTIONS & SOCKETS //\r\n  //                           //\r\n  // Update Genres\r\n  const toggleGenre = (e, netflixid) => {\r\n    if (e.target.style.backgroundColor === \"white\") {\r\n      e.target.style.backgroundColor = \"black\";\r\n    } else {\r\n      e.target.style.backgroundColor = \"white\";\r\n    }\r\n    if (e.target.style.color === \"black\") {\r\n      e.target.style.color = \"white\";\r\n    } else {\r\n      e.target.style.color = \"black\";\r\n    }\r\n\r\n    const genreIndex = userGenres.indexOf(netflixid);\r\n    if (genreIndex === -1) {\r\n      setUserGenres([...userGenres, netflixid]);\r\n    } else {\r\n      setUserGenres((prevState) => prevState.filter((id) => id !== netflixid));\r\n    }\r\n    socket.emit(\"updateGenres\", netflixid);\r\n  };\r\n\r\n  // Submit Genres\r\n  const submitGenres = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"submitted genres\");\r\n    socket.emit(\"getGenres\");\r\n  };\r\n\r\n  // Receive Genres After Submission\r\n  useEffect(() => {\r\n    socket.on(\"receiveGenres\", (receivedGenres) => {\r\n      console.log(\"received genres:\", receivedGenres);\r\n      setUserGenres(receivedGenres);\r\n      history.push(`${match.path}/movies`);\r\n    });\r\n  }, [history, match.path]);\r\n\r\n  //                           //\r\n  // MOVIE FUNCTIONS & SOCKETS //\r\n  //                           //\r\n  // Create toggle movies function\r\n  // Create submit movies function\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.path}/movies`}>\r\n        <MatchMovies\r\n          movies={movies}\r\n          setMovies={setMovies}\r\n          userMovies={userMovies}\r\n          userGenres={userGenres}\r\n          rapidApiKey={rapidApiKey}\r\n        />\r\n      </Route>\r\n      <Route path={`${match.path}/genres`}>\r\n        <MatchGenres\r\n          genres={genres}\r\n          setGenres={setGenres}\r\n          toggleGenre={toggleGenre}\r\n          submitGenres={submitGenres}\r\n          rapidApiKey={rapidApiKey}\r\n        />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\nexport default Match;\r\n","C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\components\\Join.js",[],"C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\components\\MatchGenres.js",["40"],"import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst MatchGenres = ({\r\n  genres,\r\n  rapidApiKey,\r\n  setGenres,\r\n  toggleGenre,\r\n  submitGenres,\r\n}) => {\r\n  // Get Genres from Netflix API\r\n  useEffect(() => {\r\n    const options = {\r\n      method: \"GET\",\r\n      url: `https://api.themoviedb.org/3/genre/movie/list?api_key=${rapidApiKey}&language=en-US`,\r\n    };\r\n\r\n    axios\r\n      .request(options)\r\n      .then((res) => {\r\n        setGenres([]);\r\n        console.log(\"genre response:\", res);\r\n        setGenres(res.data.genres);\r\n        console.log(\"genres:\", genres);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [rapidApiKey, setGenres]);\r\n\r\n  return (\r\n    <div className=\"m-auto mt-20 w-80 md:w-1/2\">\r\n      <h1>Choose your Genres</h1>\r\n      {genres.length === 0 ? (\r\n        <div className=\"bg-black h-16 w-16 animate-pulse\"></div>\r\n      ) : (\r\n        genres.map((item) => (\r\n          <div\r\n            key={item.id}\r\n            style={{ backgroundColor: \"white\", color: \"black\" }}\r\n            onClick={(e) => toggleGenre(e, item.id)}\r\n          >\r\n            {item.name}\r\n          </div>\r\n        ))\r\n      )}\r\n      <button onClick={(e) => submitGenres(e)}>Continue</button>\r\n    </div>\r\n  );\r\n};\r\nexport default MatchGenres;\r\n","C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\components\\MatchMovies.js",["41"],"import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst MatchMovies = ({\r\n  movies,\r\n  setMovies,\r\n  userMovies,\r\n  toggleMovies,\r\n  submitMovies,\r\n  userGenres,\r\n  rapidApiKey,\r\n}) => {\r\n  // Get Movies from Netflix API\r\n  useEffect(() => {\r\n    const genresString = userGenres.join(\", \");\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      url: \"https://unogsng.p.rapidapi.com/search\",\r\n      params: {\r\n        genrelist: genresString,\r\n        start_year: \"1972\",\r\n        orderby: \"rating\",\r\n        audiosubtitle_andor: \"and\",\r\n        limit: \"100\",\r\n        subtitle: \"english\",\r\n        countrylist: \"46\",\r\n        audio: \"english\",\r\n        country_andorunique: \"unique\",\r\n        offset: \"0\",\r\n        end_year: \"2019\",\r\n      },\r\n      headers: {\r\n        \"x-rapidapi-key\": rapidApiKey,\r\n        \"x-rapidapi-host\": \"unogsng.p.rapidapi.com\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .request(options)\r\n      .then((res) => {\r\n        setMovies([]);\r\n        res.data.results.map((item) =>\r\n          setMovies((prevState) => [\r\n            ...prevState,\r\n            {\r\n              id: item.id,\r\n              netflixid: item.nfid,\r\n              avgRating: item.avgrating,\r\n              imdbRating: item.imdbrating,\r\n              imgSrc: item.poster,\r\n              runtime: item.runtime,\r\n              synopsis: item.synopsis,\r\n              title: item.title,\r\n              yearReleased: item.year,\r\n              type: item.vtype,\r\n              selected: false,\r\n            },\r\n          ])\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Choose your Genres</h1>\r\n      {movies.length === 0 ? (\r\n        <div className=\"bg-black h-16 w-16 animate-pulse\"></div>\r\n      ) : (\r\n        movies.map((item) => (\r\n          <button\r\n            key={item.netflixid}\r\n            style={{ backgroundColor: \"white\", color: \"black\" }}\r\n            onClick={(e) => toggleMovies(e, item.netflixid)}\r\n          >\r\n            {item.genre}\r\n          </button>\r\n        ))\r\n      )}\r\n      <button onClick={(e) => submitMovies(e)}>Continue</button>\r\n    </div>\r\n  );\r\n};\r\nexport default MatchMovies;\r\n",["42","43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":27,"column":22,"nodeType":"50","messageId":"51","endLine":27,"endColumn":35},{"ruleId":"48","severity":1,"message":"52","line":28,"column":16,"nodeType":"50","messageId":"51","endLine":28,"endColumn":23},{"ruleId":"48","severity":1,"message":"53","line":29,"column":16,"nodeType":"50","messageId":"51","endLine":29,"endColumn":23},{"ruleId":"54","severity":1,"message":"55","line":29,"column":6,"nodeType":"56","endLine":29,"endColumn":30,"suggestions":"57"},{"ruleId":"54","severity":1,"message":"58","line":65,"column":6,"nodeType":"56","endLine":65,"endColumn":8,"suggestions":"59"},{"ruleId":"44","replacedBy":"60"},{"ruleId":"46","replacedBy":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'setUserMovies' is assigned a value but never used.","Identifier","unusedVar","'setName' is assigned a value but never used.","'setroom' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'genres'. Either include it or remove the dependency array.","ArrayExpression",["64"],"React Hook useEffect has missing dependencies: 'rapidApiKey', 'setMovies', and 'userGenres'. Either include them or remove the dependency array. If 'setMovies' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["65"],["62"],["63"],"no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},"Update the dependencies array to be: [genres, rapidApiKey, setGenres]",{"range":"70","text":"71"},"Update the dependencies array to be: [rapidApiKey, setMovies, userGenres]",{"range":"72","text":"73"},[675,699],"[genres, rapidApiKey, setGenres]",[1627,1629],"[rapidApiKey, setMovies, userGenres]"]