[{"C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\index.js":"1","C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\App.js":"2","C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\reportWebVitals.js":"3","C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\components\\Match.js":"4","C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\components\\Join.js":"5","C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\components\\MatchGenres.js":"6","C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\components\\MatchMovies.js":"7"},{"size":589,"mtime":1610386330264,"results":"8","hashOfConfig":"9"},{"size":447,"mtime":1611766892379,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2765,"mtime":1614093680307,"results":"12","hashOfConfig":"9"},{"size":788,"mtime":1611772137248,"results":"13","hashOfConfig":"9"},{"size":1663,"mtime":1614094311127,"results":"14","hashOfConfig":"9"},{"size":1162,"mtime":1614094310181,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1jl6uht",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\index.js",[],["32","33"],"C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\App.js",[],"C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\reportWebVitals.js",[],"C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\components\\Match.js",["34","35","36","37","38","39","40"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useHistory,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport io from \"socket.io-client\";\r\n// components\r\nimport MatchGenres from \"./MatchGenres\";\r\nimport MatchMovies from \"./MatchMovies\";\r\n\r\nlet socket;\r\n\r\nconst Match = () => {\r\n  const slug = useParams();\r\n  const match = useRouteMatch();\r\n  const rapidApiKey = process.env.REACT_APP_RAPID_API_KEY;\r\n  const socketEndPoint = \"localhost:5000\";\r\n  let history = useHistory();\r\n\r\n  // STATE\r\n  const [genres, setGenres] = useState([]);\r\n  const [userGenres, setUserGenres] = useState([]);\r\n  const [movies, setMovies] = useState([]);\r\n  const [userMovies, setUserMovies] = useState([]);\r\n  const [name, setName] = useState(slug.name);\r\n  const [room, setroom] = useState(slug.room);\r\n\r\n  //                           //\r\n  //       SOCKET GENERAL      //\r\n  //                           //\r\n  // Join/Leave Room\r\n  useEffect(() => {\r\n    socket = io(socketEndPoint);\r\n\r\n    socket.emit(\"join\", { name, room }, () => {});\r\n\r\n    return () => {\r\n      socket.emit(\"endConnection\", room);\r\n\r\n      socket.off();\r\n    };\r\n  }, [socketEndPoint, name, room]);\r\n\r\n  // Other Users Joining Room\r\n  useEffect(() => {\r\n    socket.on(\"message\", (message) => {\r\n      alert(message.text);\r\n    });\r\n  }, []);\r\n\r\n  //                           //\r\n  // GENRE FUNCTIONS & SOCKETS //\r\n  //                           //\r\n  // Update Genres\r\n  const toggleGenre = (netflixid) => {\r\n    const genreIndex = userGenres.indexOf(netflixid);\r\n\r\n    if (genreIndex === -1) {\r\n      setUserGenres([...userGenres, netflixid]);\r\n    } else {\r\n      setUserGenres((prevState) => prevState.filter((id) => id !== netflixid));\r\n    }\r\n\r\n    socket.emit(\"updateGenres\", netflixid);\r\n  };\r\n\r\n  // Submit Genres\r\n  const submitGenres = (e) => {\r\n    e.preventDefault();\r\n    socket.emit(\"getGenres\");\r\n  };\r\n\r\n  // Receive Genres After Submission\r\n  useEffect(() => {\r\n    socket.on(\"receiveGenres\", (receivedGenres) => {\r\n      setUserGenres(receivedGenres);\r\n      history.push(`${match.path}/movies`);\r\n    });\r\n  }, [history, match.path]);\r\n\r\n  //                           //\r\n  // MOVIE FUNCTIONS & SOCKETS //\r\n  //                           //\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.path}/movies`}>\r\n        <MatchMovies />\r\n      </Route>\r\n      <Route path={`${match.path}/genres`}>\r\n        <MatchGenres\r\n          genres={genres}\r\n          setGenres={setGenres}\r\n          userGenres={userGenres}\r\n          toggleGenre={toggleGenre}\r\n          submitGenres={submitGenres}\r\n          rapidApiKey={rapidApiKey}\r\n        />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\nexport default Match;\r\n","C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\components\\Join.js",[],"C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\components\\MatchGenres.js",[],"C:\\Users\\sdelp\\Documents\\Projects\\netflix-match\\src\\components\\MatchMovies.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":9,"column":8,"nodeType":"47","messageId":"48","endLine":9,"endColumn":13},{"ruleId":"45","severity":1,"message":"49","line":27,"column":10,"nodeType":"47","messageId":"48","endLine":27,"endColumn":16},{"ruleId":"45","severity":1,"message":"50","line":27,"column":18,"nodeType":"47","messageId":"48","endLine":27,"endColumn":27},{"ruleId":"45","severity":1,"message":"51","line":28,"column":10,"nodeType":"47","messageId":"48","endLine":28,"endColumn":20},{"ruleId":"45","severity":1,"message":"52","line":28,"column":22,"nodeType":"47","messageId":"48","endLine":28,"endColumn":35},{"ruleId":"45","severity":1,"message":"53","line":29,"column":16,"nodeType":"47","messageId":"48","endLine":29,"endColumn":23},{"ruleId":"45","severity":1,"message":"54","line":30,"column":16,"nodeType":"47","messageId":"48","endLine":30,"endColumn":23},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'movies' is assigned a value but never used.","'setMovies' is assigned a value but never used.","'userMovies' is assigned a value but never used.","'setUserMovies' is assigned a value but never used.","'setName' is assigned a value but never used.","'setroom' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]